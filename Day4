# SIMPLE USER INPUT SCRIPT W/ CASE STATEMENT----------------------------------------------------------

1 #!/bin/bash
  2 function getuserchoice () {
  3    echo "Make a choice 1 2 or 3: "
  4    #prompt
  5    read userchoice
  6    case $userchoice in
  7       (1) echo one ;;
  8       (2) echo two ;;
  9       (3) echo three ;;
 10       (*) echo other ;;
 11    esac
 12 }
 13 
 14 getuserchoice

--------RUN SCRIPT----------------
student@lin-ops:~/Bash4$ ./example1.sh 
Make a choice 1 2 or 3: 
1
one
student@lin-ops:~/Bash4$ ./example1.sh 
Make a choice 1 2 or 3: 
4
other
student@lin-ops:~/Bash4$ ./example1.sh 
Make a choice 1 2 or 3: 
g
other

====================================================================================================

kill <PID> or pkil <procName>

md5sum
-cannot do on directory directly
-if want to make dir md5sum then have to chnage into something else
-can archive, complress it, in linux this is tarball
Tarball
-has md5sum assiciatd with it

$0 name of the script
$$ PID of shell
 ============================================================================================

LOOPING

-while----------------------

  while [ condition  ]
  do
     commands
  done      

EX WHILE----------
  1 #!/bin/bash
  2 
  3 counter=1
  4 while [[ counter -le 10  ]]
  5 do
  6    echo $counter
  7    ((counter++))
  8    #-or- a=`expr $counter +1`  - to also inc conter
  9 done
-----RUN SCRIPT-----------------
student@lin-ops:~/Bash4$ ./whileloop.py 
1
2
3
4
5
6
7
8
9
10
======================================================


-for------------------------

for <var> in <list>
do
  commands
done

FOR EXAMPLE:---------------------------
  1 #!/bin/bash
  2 
  3 names='Mile Lola Kim Doug Sherrly Vince Deez'
  4 for names in $names
  5 do
  6    echo $names
       #mkdir $HOME/$names
  7 done
  8 
  9 echo All Done
---------__RUN SCRIPT----------------
student@lin-ops:~/Bash4$ ./forloop.py 
Mile
Lola
Kim
Doug
Sherrly
Vince
Deez
All Done

================

FOR RANGE EXAMPLE 1:
#!/bin/bash

for value in {1..20}
do
   echo $value
done
 --------RUN SCRIPT--------------
 student@lin-ops:~/Bash4$ ./range.sh 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

==========================

FOR RANGE EXAMPLE 2:
#!/bin/bash

for value in {1..20..2}
do
   echo $value
done
 ---------- RUN SCRIPT----------------------
 student@lin-ops:~/Bash4$ ./range.sh 
1
3
5
7
9
11
13
15
17
19

=============================================================================

-until -------------- executes commands until condition is true

until <condition>
do
  commands
done

UNTIL EXAMPLE:---------------------------
  1 #!/bin/bash
  2 
  3 a=0
  4 until [[ $a -gt 10 ]]
  5 do
  6    echo $a
  7    a=`expr $a + 1`
  8 done
----RUN SCRIPT-------------------------
student@lin-ops:~/Bash4$ ./untilloop.py 
0
1
2
3
4
5
6
7
8
9
10
=======================================================

break : exit loop
contunie : end iteration of loop and continue to next


-select statement -----------------------------------------------------

  1 #!/bin/bash
  2 
  3 select <var> in <lists>
  4 do 
  5    commands
  6 done
~            
SELECT EXAMPLE: ------------------------------------

#!/bin/bash

names='Nicki Jamie Rollie Rotty Nkenesliw Sam Folkawrr Quit'
select name in $names
do
   if [[ $name == 'Quit' ]]
      then
         break
   fi
   echo Hello $name
done
---------RUN SCRIPT----------------------

student@lin-ops:~/Bash4$ ./select.sh 
1) Nicki      3) Rollie	    5) Nkenesliw  7) Folkawrr
2) Jamie      4) Rotty	    6) Sam	  8) Quit
#? 1
Hello Nicki
#? 2
Hello Jamie
#? 4
Hello Rotty
#? 7
Hello Folkawrr
#? 8

=================================================================



